
1. http://192.168.1.150:10080/hypercloud/hypercloud-operator/blob/master/_yaml_Install/1.initialization.yaml 실행

2. http://192.168.1.150:10080/hypercloud/hypercloud-operator/blob/master/_yaml_Install/4.proauth-db.yaml 실행

3. http://192.168.1.150:10080/hypercloud/hypercloud-operator/blob/master/_yaml_Install/5.proauth-server.yaml 실행 ( node Selector 설정 : proauth db pod와 같은 node로 설정 )

4. http://192.168.1.150:10080/hypercloud/hypercloud-operator/blob/master/_yaml_Install/6.hypercloud4-operator.yaml 실행 ( PROAUTH_EXIST 환경 변수가 "1" 로 추가 되었음을 확인 )

5. kubectl get user를 통해 이미 생성된 User를 확인하고 메모해둔다.

6. kubectl delete user "userName" 을 통해 생성된 user를 모두 지워준다.

7. hypercloud4-operator userCreate 서비스를 이용해서 지워줬던 user를 다시 생성해준다.
  1) POST http://192.168.6.149:28677/user
       {
		  "id": "admin-tmax.co.kr",
		  "name": "admin",
		  "password": "c7ad44cbad762a5da0a452f9e854fdc1e0e7a52a38015f23f3eab1d80b931dd472634dfac71cd34ebc35d16ab7fb8a90c81f975113d6c7538dc69dd8de9077ec",
		  "email": "admin@tmax.co.kr",
		  "phone": "000-0000-0000"
	   }
  2) id와 비밀번호는 분리 되었으므로 형식을 맞출 필요가 더이상 없지만 위의 예시는 기존에 생성되어있던 admin@tmax.co.kr 의 설정을 그대로 쓰기 위함이다.
  3) id는 k8s의 metadata Name으로 들어가기 때문에, 대부분의 특수 문자를 더이상 사용할 수 없다.	   
  3) password는 현재 ui가 나오지 않은 상황이기 때문에 원하는 password를 sha-512 해슁을 진행 ( https://www.convertstring.com/ko/Hash/SHA512 이용)
  4) 소문자를 넣어 줘야 하므로 비밀번호를 모두 소문자로 만들어준다. (http://mwultong.blogspot.com/2007/12/case-converter.html 이용 )
      * 위의 예시는 "admin"을 해쉬 하고 소문자로 만든 결과이다.
  5) admin-tmax.co.kr / admin 으로 기존의 ui로 접속이 가능해진다.
  
8. 이제 userID와 mail 의 형식이 분리 되었으므로 기존에 만들어진 roleBinding subjects에 User정보를 admin@tmax.co.kr --> admin-tmax.co.kr로 userID와 맞춰준다. 

9. admin-tmax.co.kr User에 관한 role, rolebinding이 그대로 살아 있으므로 같은 권한으로 이용이 가능해진다. 
  


